{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","to","id","width","Menu","menu","dishes","map","key","console","log","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","postFeedback","resetFeedbackForm","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","RenderLeader","tag","left","middle","object","body","heading","About","leaders","title","list","CommentForm","state","isModalOpen","toggleModal","setState","JSON","stringify","postComment","dishId","rating","author","comment","outline","onClick","isOpen","toggle","RenderDish","top","RenderComments","comments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","Dishdetail","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","Fragment","dark","expand","height","navbar","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","message","json","addComment","catch","feedback","newFeedback","firstname","lastname","telnum","email","agree","contactType","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.764dbf3e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n   return(\r\n      <div className=\"col-12\">\r\n         <span className=\"fa fa-spinner fa-pluse fa-3x fa-fw text-primary\"></span>\r\n         <p>Loading . . .</p>\r\n      </div>\r\n   );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n   if (isLoading) {\r\n      return(\r\n         <Loading />\r\n      );\r\n   }\r\n   else if (errMess) {\r\n      return(\r\n         <h4>{errMess}</h4>\r\n      );\r\n   }\r\n   else {   \r\n      return (\r\n         <FadeTransform in\r\n            transformProps={{\r\n               exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n            <Card>\r\n               <CardImg src={baseUrl + item.image} alt={item.name} />\r\n               <CardBody>\r\n                  <CardTitle>{item.name}</CardTitle>\r\n                  {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                  <CardText>{item.description}</CardText>\r\n               </CardBody>\r\n            </Card>    \r\n         </FadeTransform>\r\n      );\r\n   }\r\n}\r\n\r\nfunction Home(props) {\r\n   return (\r\n      <div className=\"container\">\r\n         <div className=\"row align-items-start\">\r\n            <div className=\"col-12 col-md m-1\">\r\n               <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />\r\n            </div>\r\n            <div className=\"col-12 col-md m-1\">\r\n               <RenderCard item={props.promotion} isLoading={props.promosLoading} errMess={props.promosErrMess} />\r\n            </div>\r\n            <div className=\"col-12 col-md m-1\">\r\n               <RenderCard item={props.leader} isLoading={props.leadersLoading} errMess={props.leadersErrMess} />\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n    \r\n    function RenderMenuItem ({dish}) {\r\n        return (\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n\r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            if (props.dishes.isLoading) {\r\n                return(\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">            \r\n                            <Loading />\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            else if (props.dishes.errMess) {\r\n                return(\r\n                    <div className=\"container\">\r\n                        <div className=\"row\"> \r\n                            <div className=\"col-12\">\r\n                                <h4>{props.dishes.errMess}</h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            else\r\n            return (\r\n         \r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>    \r\n            );\r\n        }); \r\n\r\n        console.log('Menu component render invoked')\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, FormGroup, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n   constructor(props) {\r\n      super(props);\r\n      \r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n   }\r\n   \r\n   handleSubmit(values) {\r\n      this.props.postFeedback(values);\r\n     \r\n      this.props.resetFeedbackForm();\r\n   }\r\n\r\n   render() {   \r\n      return(\r\n         <div className=\"container\">\r\n            <div className=\"row\">\r\n               <Breadcrumb>\r\n                  <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                  <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n               </Breadcrumb>\r\n               <div className=\"col-12\">\r\n                  <h3>Contact Us</h3>\r\n                  <hr />\r\n               </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n               <div className=\"col-12\">\r\n                  <h3>Location Information</h3>\r\n               </div>\r\n               <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                  <h5>Our Address</h5>\r\n                  <address>\r\n                  121, Clear Water Bay Road<br />\r\n                  Clear Water Bay, Kowloon<br />\r\n                  HONG KONG<br />\r\n                  <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                  <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                  <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                  </address>\r\n               </div>\r\n               <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                  <h5>Map of our Location</h5>\r\n               </div>\r\n               <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                  <div className=\"btn-group\" role=\"group\">\r\n                     <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                     <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                     <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>                  \r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n               <div className=\"col-12\">\r\n                  <h3>Send us Your Feedback</h3>\r\n               </div>\r\n               <div className=\"col-12 col-md-9\">\r\n                   <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                      <Row className=\"form-group\">\r\n                         <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                         <Col md={10}>\r\n                            <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" className=\"form-control\" \r\n                             validators={{\r\n                                required, minLength: minLength(3), maxLength: maxLength(15)\r\n                             }}\r\n                            />  \r\n                            <Errors\r\n                               className=\"text-danger\"\r\n                               model=\".firstname\"\r\n                               show=\"touched\"\r\n                               messages={{\r\n                                  required: 'Required',\r\n                                  minLength: 'Must be greater than 2 characters',\r\n                                  maxLength: 'Must be 15 characters or less'\r\n                               }}\r\n                            />                          \r\n                         </Col>\r\n                      </Row>\r\n                      <Row className=\"form-group\">\r\n                         <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                         <Col md={10}>\r\n                            <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" className=\"form-control\" \r\n                             validators={{\r\n                                required, minLength: minLength(3), maxLength: maxLength(15)\r\n                             }}\r\n                            />  \r\n                            <Errors\r\n                               className=\"text-danger\"\r\n                               model=\".lastname\"\r\n                               show=\"touched\"\r\n                               messages={{\r\n                                  required: 'Required',\r\n                                  minLength: 'Must be greater than 2 characters',\r\n                                  maxLength: 'Must be 15 characters or less'\r\n                               }}\r\n                            />                                                      \r\n                         </Col>\r\n                      </Row>\r\n                      <Row className=\"form-group\">\r\n                         <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                         <Col md={10}>\r\n                            <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" placeholder=\"Tel. Number\" className=\"form-control\" \r\n                             validators={{\r\n                                required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                             }}\r\n                            />  \r\n                            <Errors\r\n                               className=\"text-danger\"\r\n                               model=\".telnum\"\r\n                               show=\"touched\"\r\n                               messages={{\r\n                                  required: 'Required',\r\n                                  minLength: 'Must be greater than 2 numbers',\r\n                                  maxLength: 'Must be 15 numbers or less',\r\n                                  isNumber: 'Must be a number'\r\n                               }}\r\n                            />                                                          \r\n                         </Col>\r\n                      </Row>\r\n                      <Row className=\"form-group\">\r\n                         <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                         <Col md={10}>\r\n                            <Control.text model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email\" className=\"form-control\"\r\n                             validators={{\r\n                                required, validEmail\r\n                             }}\r\n                            />  \r\n                            <Errors\r\n                               className=\"text-danger\"\r\n                               model=\".email\"\r\n                               show=\"touched\"\r\n                               messages={{\r\n                                  required: 'Required',\r\n                                  validEmail: 'Invalid Email Address'\r\n                               }}\r\n                            />                              \r\n                         </Col>\r\n                      </Row>\r\n                      <Row className=\"form-group\">\r\n                         <Col md={{size: 6, offset: 2}}>\r\n                             <div className=\"form-check\">\r\n                                <Label check>\r\n                                   <Control.checkbox model=\".agree\" name=\"agree\" className=\"form-check-input\" /> {' '}\r\n                                   <strong>May we contact you?</strong>\r\n                                </Label>\r\n                             </div>\r\n                         </Col> \r\n                         <Col md={{size: 3, offset: 1}}>\r\n                            <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\">\r\n                               <option>Tel.</option>\r\n                               <option>Email</option>\r\n                            </Control.select>\r\n                         </Col>                      \r\n                      </Row>\r\n                      <Row className=\"form-group\">\r\n                         <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                         <Col md={10}>\r\n                            <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows=\"12\" className=\"form-control\" />                            \r\n                         </Col>\r\n                      </Row>\r\n                      <Row className=\"form-group\">\r\n                         <Col md={{size: 10, offset: 2}}>\r\n                            <Button type=\"submit\" color=\"primary\">\r\n                               Send Feedback\r\n                            </Button>\r\n                         </Col>\r\n                      </Row>\r\n                   </Form>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader({leader}) {\r\n   return (\r\n      <Fade in>\r\n         <div key={leader.id} className=\"col-12 mt-5\">\r\n            <Media tag=\"li\">\r\n               <Media left middle>\r\n                  <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n               </Media>\r\n               <Media body className=\"ml-5\">\r\n                  <Media heading>{leader.name}</Media>\r\n                  <p>{leader.designation}</p>\r\n                  <p>{leader.description}</p>\r\n               </Media>\r\n            </Media>\r\n         </div>\r\n      </Fade>\r\n   );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <RenderLeader leader={leader} />\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                   <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                   <Media list>\r\n                      <Stagger in>\r\n                        {leaders}\r\n                      </Stagger>\r\n                   </Media> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Modal, ModalHeader, ModalBody, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n   \r\n   constructor(props) {\r\n      super(props);\r\n      \r\n      this.state = {\r\n         isModalOpen: false\r\n      }\r\n      \r\n      this.toggleModal = this.toggleModal.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n   }\r\n   \r\n   toggleModal() {\r\n      this.setState({ isModalOpen: !this.state.isModalOpen });\r\n   }\r\n   \r\n   handleSubmit(values) {\r\n      console.log(\"Current State is: \" + JSON.stringify(values));\r\n      this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n   }\r\n   \r\n   render() {\r\n      return(\r\n         <div className=\"container\">\r\n            <div className=\"row\">\r\n               <Button outline onClick={this.toggleModal}>\r\n                  <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\r\n               </Button>\r\n                           \r\n               <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                  <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                  <ModalBody>\r\n                     <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                           <Col md={12}>\r\n                              <Label htmlFor=\"rating\">Rating</Label>\r\n                              <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\r\n                                 <option>1</option>\r\n                                 <option>2</option>\r\n                                 <option>3</option>\r\n                                 <option>4</option>\r\n                                 <option>5</option>\r\n                              </Control.select>\r\n                           </Col>                          \r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                           <Col md={12}>\r\n                              <Label htmlFor=\"author\">Your Name</Label>\r\n                              <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Your Name\" className=\"form-control\"\r\n                               validators={{\r\n                                  required, minLength: minLength(3), maxLength: maxLength(15)\r\n                               }}\r\n                              />    \r\n                              <Errors\r\n                                 className=\"text-danger\"\r\n                                 model=\".author\"\r\n                                 show=\"touched\"\r\n                                 messages={{\r\n                                    required: 'Required',\r\n                                    minLength: 'Must be greater than 2 characters',\r\n                                    maxLength: 'Must be 15 characters or less'\r\n                                 }}\r\n                              />                            \r\n                           </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                           <Col md={12}>\r\n                              <Label htmlFor=\"comment\">Comment</Label>\r\n                              <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" rows=\"6\" className=\"form-control\" />                           \r\n                           </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                           <Col md={12}>\r\n                              <Button type=\"submit\" color=\"primary\">\r\n                                 Submit\r\n                              </Button>\r\n                           </Col>\r\n                        </Row>\r\n                     </LocalForm>\r\n                  </ModalBody>\r\n               </Modal>\r\n            </div>\r\n        </div>\r\n      );\r\n   }\r\n}\r\n\r\nfunction RenderDish({dish}) {\r\n   return (\r\n      <div className=\"col-12 col-md-5 m-1\">\r\n           <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n            <Card>\r\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform>\r\n      </div>\r\n   );\r\n}\r\n\r\nfunction RenderComments({comments, postComment, dishId}) {\r\n   if (comments != null) {\r\n      return (\r\n         <div className=\"col-12 col-md-5 m-1\">\r\n            <h4>Comments</h4>\r\n            <ul className=\"list-unstyled\">\r\n            <Stagger in>\r\n                        {comments.map((comment) => {\r\n                            return (\r\n                                <Fade in>\r\n                                <li key={comment.id}>\r\n                                <p>{comment.comment}</p>\r\n                                <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                                </li>\r\n                                </Fade>\r\n                            );\r\n                        })}\r\n                        </Stagger>\r\n            </ul>\r\n            <CommentForm dishId={dishId} postComment={postComment} />\r\n         </div>\r\n      );\r\n   }\r\n   else {\r\n      return (\r\n         <div></div>\r\n      );\r\n   }\r\n}\r\n\r\nconst Dishdetail = (props) => {\r\n   if (props.isLoading) {\r\n      return(\r\n          <div className=\"container\">\r\n              <div className=\"row\">            \r\n                  <Loading />\r\n              </div>\r\n          </div>\r\n      );\r\n  }\r\n  else if (props.errMess) {\r\n      return(\r\n          <div className=\"container\">\r\n              <div className=\"row\">            \r\n                  <h4>{props.errMess}</h4>\r\n              </div>\r\n          </div>\r\n      );\r\n  }\r\n  else if (props.dish != null) \r\n   if (props.dish != null) {\r\n      return (\r\n         <div className=\"container\">\r\n            <div className=\"row\">\r\n               <Breadcrumb>\r\n                  <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                  <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n               </Breadcrumb>\r\n               <div className=\"col-12\">\r\n                  <h3>{props.dish.name}</h3>\r\n                  <hr />\r\n               </div>\r\n            </div>\r\n            <div className=\"row\">\r\n               <RenderDish dish={props.dish} />\r\n               <RenderComments comments={props.comments}\r\n                 postComment={props.postComment}\r\n                dishId={props.dish.id}/>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n   else {\r\n      return (\r\n         <div></div> \r\n      );\r\n   }\r\n}\r\n\r\nexport default Dishdetail;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        }\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n      handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" \r\n                                alt=\"Ristorante Con Fusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\"> \r\n                                        <span className=\"fa fa-home fa-lg\"></span> Home \r\n                                    </NavLink> \r\n                                </NavItem>    \r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\"> \r\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us \r\n                                    </NavLink>    \r\n                                </NavItem> \r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\"> \r\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu \r\n                                    </NavLink>    \r\n                                </NavItem>    \r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\"> \r\n                                        <span className=\"fa fa-info fa-lg\"></span> Contact Us \r\n                                    </NavLink>    \r\n                                </NavItem> \r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>    \r\n                    </div>\r\n                </Navbar>\r\n\r\n                <Jumbotron>   \r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\"> \r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>  \r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>  \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header; ","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to=\"/home\">Home</Link></li>\r\n                            <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                            <li><Link to=\"/menu\">Menu</Link></li>\r\n                            <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                            confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\nimport { DISHES } from '../shared/dishes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport fetch from 'cross-fetch';\r\n\r\nexport const addComment = (comment) => ({\r\n   type: ActionTypes.ADD_COMMENT,\r\n   payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n   const newComment = {\r\n      dishId: dishId,\r\n      rating: rating,\r\n      author: author,\r\n      comment: comment\r\n   }\r\n   newComment.date = new Date().toISOString();\r\n   \r\n   return fetch(baseUrl + 'comments', {\r\n      method: 'POST',\r\n      body: JSON.stringify(newComment),\r\n      headers: {\r\n         'Content-Type': 'application/json'\r\n      },\r\n      credentials: 'same-origin'\r\n   })\r\n   .then(response => {\r\n      if (response.ok) {\r\n         return response;\r\n      }\r\n      else {\r\n         var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n         error.response = response;\r\n         throw error;\r\n      }\r\n   }, \r\n   error => {\r\n      var errmess = new Error(error.message);\r\n      throw errmess;\r\n   })\r\n   .then(response => response.json())\r\n   .then(response => dispatch(addComment(response)))\r\n   .catch(error => { console.log('Post comments ', error.message);\r\n   alert('Your comment could not be posted\\nError: ' + error.message); })\r\n}\r\n\r\nexport const postFeedback = (feedback) => (dispatch) => {\r\n   const newFeedback = {\r\n      firstname: feedback.firstname,\r\n      lastname: feedback.lastname,\r\n      telnum: feedback.telnum,\r\n      email: feedback.email,\r\n      agree: feedback.agree,\r\n      contactType: feedback.contactType,\r\n      message: feedback.message\r\n   }\r\n    \r\n   return fetch(baseUrl + 'feedback', {\r\n      method: 'POST',\r\n      body: JSON.stringify(newFeedback),\r\n      headers: {\r\n         'Content-Type': 'application/json'\r\n      },\r\n      credentials: 'same-origin'\r\n   })\r\n   .then(response => {\r\n      if (response.ok) {\r\n         return response;\r\n      }\r\n      else {\r\n         var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n         error.response = response;\r\n         throw error;\r\n      }\r\n   }, \r\n   error => {\r\n      var errmess = new Error(error.message);    \r\n      throw errmess;\r\n   })\r\n   .then(response => response.json())\r\n   .then(response => { console.log(\"Current State is: \" + JSON.stringify(response)); \r\n                       alert(\"Thank you for your feedback!<br/>\" + JSON.stringify(response)); })\r\n   .catch(error => { console.log('Post comments ', error.message);\r\n                     alert('Your feedback could not be posted\\nError: ' + error.message); })\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n   dispatch(dishesLoading(true));\r\n   \r\n   return fetch(baseUrl + 'dishes')\r\n   .then(response => {\r\n      if (response.ok) {\r\n         return response;\r\n      }\r\n      else {\r\n         var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n         error.response = response;\r\n         throw error;\r\n      }\r\n   }, \r\n   error => {\r\n      var errmess = new Error(error.message);\r\n      throw errmess;\r\n   })\r\n   .then(response => response.json())\r\n   .then(dishes => dispatch(addDishes(dishes)))\r\n   .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n   type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n   type: ActionTypes.DISHES_FAILED,\r\n   payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n   type: ActionTypes.ADD_DISHES,\r\n   payload: dishes\r\n})\r\n\r\nexport const fetchComments = () => (dispatch) => {   \r\n   return fetch(baseUrl + 'comments')\r\n   .then(response => {\r\n      if (response.ok) {\r\n         return response;\r\n      }\r\n      else {\r\n         var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n         error.response = response;\r\n         throw error;\r\n      }\r\n   }, \r\n   error => {\r\n      var errmess = new Error(error.message);\r\n      throw errmess;\r\n   })\r\n   .then(response => response.json())\r\n   .then(comments => dispatch(addComments(comments)))\r\n   .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n   type: ActionTypes.COMMENTS_FAILED,\r\n   payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n   type: ActionTypes.ADD_COMMENTS,\r\n   payload: comments\r\n})\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n   dispatch(promosLoading(true));\r\n   \r\n   return fetch(baseUrl + 'promotions')\r\n   .then(response => {\r\n      if (response.ok) {\r\n         return response;\r\n      }\r\n      else {\r\n         var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n         error.response = response;\r\n         throw error;\r\n      }\r\n   }, \r\n   error => {\r\n      var errmess = new Error(error.message);\r\n      throw errmess;\r\n   })\r\n   .then(response => response.json())\r\n   .then(promos => dispatch(addPromos(promos)))\r\n   .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n   type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n   type: ActionTypes.PROMOS_FAILED,\r\n   payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n   type: ActionTypes.ADD_PROMOS,\r\n   payload: promos\r\n})\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n   dispatch(leadersLoading(true));\r\n   \r\n   return fetch(baseUrl + 'leaders')\r\n   .then(response => {\r\n      if (response.ok) {\r\n         return response;\r\n      }\r\n      else {\r\n         var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n         error.response = response;\r\n         throw error;\r\n      }\r\n   }, \r\n   error => {\r\n      var errmess = new Error(error.message);\r\n      throw errmess;\r\n   })\r\n   .then(response => response.json())\r\n   .then(promos => dispatch(addLeaders(promos)))\r\n   .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n   type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n   type: ActionTypes.LEADERS_FAILED,\r\n   payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n   type: ActionTypes.ADD_LEADERS,\r\n   payload: leaders\r\n})","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, postFeedback, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      dishes: state.dishes,\r\n      comments: state.comments,\r\n      promotions: state.promotions,\r\n      leaders: state.leaders\r\n   }       \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n   postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n   postFeedback: (feedback) => dispatch(postFeedback(feedback)),\r\n   fetchDishes: () => {dispatch(fetchDishes())},\r\n   resetFeedbackForm: () => {dispatch(actions.reset('feedback'))},\r\n   fetchComments: () => {dispatch(fetchComments())},\r\n   fetchPromos: () => {dispatch(fetchPromos())},\r\n   fetchLeaders: () => {dispatch(fetchLeaders())}\r\n});\r\n    \r\nclass Main extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n   }\r\n   \r\n   componentDidMount() {\r\n      this.props.fetchDishes();\r\n      this.props.fetchComments();\r\n      this.props.fetchPromos();\r\n      this.props.fetchLeaders();\r\n   }\r\n   \r\n   render() {\r\n      const HomePage = () => {\r\n         return (\r\n            <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]} dishesLoading={this.props.dishes.isLoading} dishesErrMess={this.props.dishes.errMess} \r\n            promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]} promosLoading={this.props.promotions.isLoading} promosErrMess={this.props.promotions.errMess}\r\n            leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]} leadersLoading={this.props.leaders.isLoading} leadersErrMess={this.props.leaders.errMess} />\r\n         );\r\n      }\r\n      \r\n      const DishWithId = ({match}) => {\r\n         return (\r\n            <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]} isLoading={this.props.dishes.isLoading} errMess={this.props.dishes.errMess} \r\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))} commentsErrMess={this.props.comments.errMess} postComment={this.props.postComment} />\r\n         );\r\n      }\r\n   \r\n      return (\r\n         <div>\r\n            <Header />\r\n            <TransitionGroup>\r\n               <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                  <Switch>\r\n                     <Route path=\"/home\" component={HomePage} />\r\n                     <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\r\n                     <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n                     <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n                     <Route exact path=\"/contactus\" component={() => <Contact postFeedback={this.props.postFeedback} resetFeedbackForm={this.props.resetFeedbackForm} />} />\r\n                     <Redirect to=\"/home\" />\r\n                  </Switch>     \r\n               </CSSTransition> \r\n            </TransitionGroup>          \r\n            <Footer />\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import { COMMENTS } from '../shared/comments';\r\nimport * as ActionTypes from './ActionTypes';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n      isLoading: true,\r\n      errMess: null,\r\n      leaders: []\r\n   }, action) => {\r\n   switch(action.type) {\r\n      case ActionTypes.ADD_LEADERS:\r\n         return {...state, isLoading: false, errMess: null, leaders: action.payload}; \r\n              \r\n      case ActionTypes.LEADERS_LOADING:\r\n         return {...state, isLoading: true, errMess: null, leaders: []}; \r\n         \r\n      case ActionTypes.LEADERS_FAILED:\r\n         return {...state, isLoading: false, errMess: action.payload, leaders: []}; \r\n        \r\n      default:\r\n         return state;\r\n   }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    \n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n  \n}\nexport default App;\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}